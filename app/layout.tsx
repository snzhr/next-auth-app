import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "@/context/authContext";
import Header from "@/components/header/Header";
import { cookies } from "next/headers";
import prisma from "@/lib/prisma";
import { verifyToken } from "@/utils/verifyToken";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const token = (await cookies()).get("token")?.value;
  const decoded = token ? verifyToken(token) : null;
  const user = decoded
    ? await prisma.user.findUnique({
        where: { id: decoded.user?.id },
      })
    : null;
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AuthProvider initialUser={user}>
          <Header />
          {children}
        </AuthProvider>
      </body>
    </html>
  );
}
